services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"    
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - afterclass_net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - afterclass_net

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: afterclass_user
      POSTGRES_PASSWORD: afterclass_pass
      POSTGRES_DB: afterclass_db
    volumes:
      - afterclass_data:/var/lib/postgresql/data     
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - afterclass_net


  database_service:
    build: ./services/database_service
    depends_on:
      - db
      - rabbitmq
    networks:
      - afterclass_net

  api:
    build: ./api
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.afterclass.localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=5001"
      - "traefik.http.routers.api.entrypoints=web"
    networks:
      - afterclass_net

  frontend:
    build: ./front-end
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`afterclass.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.entrypoints=web"
    networks:
      - afterclass_net
 
  speech_to_text:
    build: ./services/speech_to_text
    depends_on:
      - rabbitmq
    networks:
      - afterclass_net

  emotion_detector:
    build: ./services/emotion_detector
    depends_on:
      - rabbitmq
    networks:
      - afterclass_net


  langchain_brain:
    build: ./services/langchain_brain
    depends_on:
      - rabbitmq
      - database_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.langchain.rule=Host(`afterclass.localhost`)"
      - "traefik.http.services.langchain.loadbalancer.server.port=5000"
      - "traefik.http.routers.langchain.entrypoints=web"
    networks:
      - afterclass_net


  text_to_speech:
    build: ./services/text_to_speech
    depends_on:
      - rabbitmq
    networks:
      - afterclass_net

networks:
  afterclass_net:
    driver: bridge

volumes:
  afterclass_data:

